import numpy
import torch

from torch.utils.data import Dataset, DataLoader


# nn's dataset
class Cifar10FakeHumanDataset(Dataset):

    def __init__(self, batch_size, total_labeled_samples_size, total_unlabeled_samples_size=0, metric_size = 0):
        self.batch_size = batch_size
        # TODO start
        if x is None or y is None:
            self.x = torch.randn(total_labeled_samples_size, input_size)
            self.y = torch.randn(total_labeled_samples_size, output_size)
            # human
            x_unlabeled = torch.randn(total_unlabeled_samples_size, input_size)
            y_unlabeled = torch.randn(total_unlabeled_samples_size, output_size)
            iterator = zip(x_unlabeled, y_unlabeled)
            self.unlabeled_elements = dict(iterator)
            # for metrics
            self.x_metric = torch.randn(metric_size, input_size)
            self.y_metric = torch.randn(metric_size, output_size)

        else:
            self.x = x
            self.y = y

        # TODO end

        super(Cifar10FakeHumanDataset, self, inputs, outputs, batch_size, unlabeled_elements, x_metric, y_metric).__init__()
