import torch

from dataset.fake_human.abstract_fake_human_dataset import AbstractFakeHumanDataset


class TestFakeHumanDataset(AbstractFakeHumanDataset):

    def __init__(self, x_labeled, y_labeled, total_labeled_samples_size=0, total_unlabeled_samples_size=0, input_size=0, output_size=0, metric_size=0, batch_size=32):
        self.batch_size = batch_size
        if x_labeled is None or y_labeled is None:
            x_labeled = torch.randn(total_labeled_samples_size, input_size)
            y_labeled = torch.randn(total_labeled_samples_size, output_size)
            # human
            x_unlabeled = torch.randn(total_unlabeled_samples_size, input_size)
            y_unlabeled = torch.randn(total_unlabeled_samples_size, output_size)
            # for metrics
            x_metric = torch.randn(metric_size, input_size)
            y_metric = torch.randn(metric_size, output_size)
            super().__init__(x_labeled, y_labeled, x_unlabeled, y_unlabeled, x_metric, y_metric, batch_size)

        else:
            super().__init__(x_labeled, y_labeled, batch_size=batch_size)
