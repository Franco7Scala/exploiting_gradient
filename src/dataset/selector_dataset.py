import numpy


class SelectorDataset:

    def __init__(self, input_size, classed):
        self.xs = []
        self.ys = []
        self.input_size = input_size
        self.classed = classed

    def add_sample(self, x, y):
        self.xs.append(x)
        self.ys.append(y)

    def get_train_dataset(self):
        if self.classed:
            classed_ys = []
            q_1 = numpy.quantile(self.ys, 0.25)
            q_2 = numpy.quantile(self.ys, 0.50)
            q_3 = numpy.quantile(self.ys, 0.75)
            for y in self.ys:
                if y > q_3:
                    classed_ys.append([0, 0, 0, 1])

                elif q_2 <= y < q_3:
                    classed_ys.append([0, 0, 1, 0])

                elif q_1 <= y < q_2:
                    classed_ys.append([0, 1, 0, 0])

                else:  # I know that is not necessary the else but I like it
                    classed_ys.append([1, 0, 0, 0])

            return numpy.reshape(numpy.array(self.xs), (len(self.xs), self.input_size)), numpy.array(classed_ys)

        else:
            return numpy.reshape(numpy.array(self.xs), (len(self.xs), self.input_size)), numpy.array(self.ys)

    def __getitem__(self, index):
        return {"x": self.x[index], "y": self.y[index]}

    def __len__(self):
        return self.xs.shape[0]