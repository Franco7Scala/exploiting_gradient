import numpy
import torch
import torch.nn as nn

from neural_network.abstract_neural_network import AbstractNeuralNetwork


class TestNeuralNetwork(AbstractNeuralNetwork):

    def __init__(self, input_size, output_size):
        super(TestNeuralNetwork, self).__init__()
        # building nn
        self.linear_1 = torch.nn.Linear(input_size, 100)
        self.linear_2 = torch.nn.Linear(100, output_size)

    def forward(self, x):
        relu = self.linear_1(x).clamp(min=0)
        y_pred = self.linear_2(relu)
        return y_pred

    def _get_gradient(self):
        return numpy.append(self.linear_2.weight.grad[0].numpy(), self.linear_1.weight.grad[0].numpy())
